{"version":3,"sources":["../../../server/rest-handlers/user/profile.js"],"names":["router","express","Router","post","req","res","next","username","body","InvalidArgumentError","User","findUserByUsername","then","doc","exists","ResourceNotFound","locals","result","data","hashedPassword","undefined","draftRefs","catch","error","user","followingUsername","follow","following","push","unfollow","filter","e","busboyMiddleWare","limits","fileSize","immediate","compressAndSaveImage","buffer","imageUrl","verifyTokenAndSave","fileData","token","profileUrl","busboy","on","fieldName","file","Buffer","concat","value","module","exports"],"mappings":"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","file":"profile.js","sourcesContent":["import express from 'express';\nimport busboy from 'connect-busboy';\nimport User from '../../firebase/user';\nimport { saveImageToBucket } from '../../firebase/storage';\nimport { verifyToken } from '../../encrypt';\nimport {\n  InvalidArgumentError,\n  ResourceNotFound,\n} from '../../utils/errors';\nimport {\n  compressImage,\n} from '../../utils/file';\nimport { addFollowerNotification, followUser, unfollowUser } from '../../stream';\n\n\nconst router = express.Router();\n\nrouter.post('/other', (req, res, next) => {\n  const { username } = req.body;\n  if (!username) throw new InvalidArgumentError('Username cannot be empty');\n\n  User.findUserByUsername(username).then((doc) => {\n    if (!doc.exists) {\n      return next(new ResourceNotFound('User not found', 404));\n    }\n\n    res.locals.result = { ...doc.data(), hashedPassword: undefined, draftRefs: undefined };\n    return next();\n  })\n    .catch(error => next(error));\n});\n\n\nrouter.post('/me', (req, res, next) => {\n  const { username } = res.locals;\n  if (username) {\n    User.findUserByUsername(username).then((doc) => {\n      if (doc.exists) {\n        res.locals.result = { ...doc.data(), hashedPassword: undefined };\n        return next();\n      }\n      next(new ResourceNotFound('User not found'));\n    });\n  } else {\n    next(new InvalidArgumentError('Username cannot be empty'));\n  }\n});\n\n\nrouter.post('/follow', (req, res, next) => {\n  const { username } = res.locals;\n  const { user, followingUsername } = req.body;\n  if (username !== user.username) throw new InvalidArgumentError('user does not match the security token', 401);\n  if (!followingUsername) throw new InvalidArgumentError('follower username cannot be empty');\n  User.follow(followingUsername, user).then(() => {\n    followUser(username, followingUsername);\n    addFollowerNotification(followingUsername, username);\n    user.following.push(followingUsername);\n    res.locals.result = user;\n    return next();\n  })\n    .catch(error => next(error));\n});\n\n\nrouter.post('/unfollow', (req, res, next) => {\n  const { username } = res.locals;\n  const { user, followingUsername } = req.body;\n  if (username !== user.username) throw new InvalidArgumentError('user does not match the security token', 401);\n  if (!followingUsername) throw new InvalidArgumentError('invalid following');\n\n  User.unfollow(followingUsername, user).then(() => {\n    unfollowUser(username, followingUsername);\n    user.following = user.following.filter(e => e !== followingUsername);\n    res.locals.result = user;\n    return next();\n  });\n});\n\n\nconst busboyMiddleWare = () => busboy({\n  limits: {\n    fileSize: 10 * 1024 * 1024,\n  },\n  immediate: true,\n});\n\n\nconst compressAndSaveImage = (data, username) => {\n  return compressImage(data)\n    .then((buffer) => {\n      return saveImageToBucket(buffer, `${username}.jpg`);\n    })\n    .then(imageUrl => imageUrl);\n};\n\n\nconst verifyTokenAndSave = (res, next, fileData, token) => {\n  verifyToken(token)\n    .then((username) => {\n      return compressAndSaveImage(fileData, username);\n    })\n    .then((profileUrl) => {\n      res.locals.result = profileUrl;\n      next();\n    })\n    .catch(error => next(error));\n};\n\n\nrouter.post('/profile-image/save', busboyMiddleWare(), (req, res, next) => {\n  if (!req.busboy) throw new InvalidArgumentError('file binary data cannot be null');\n  let fileData = null;\n  let token = null;\n  req.busboy.on('file', (fieldName, file) => {\n    file.on('data', (data) => {\n      if (fileData === null) {\n        fileData = data;\n      } else {\n        fileData = Buffer.concat([fileData, data]);\n      }\n    });\n  });\n  req.busboy.on('field', (fieldName, value) => {\n    if (fieldName === 'token') {\n      token = value;\n    }\n  });\n  req.busboy.on('finish', () => {\n    if (!fileData) next(new InvalidArgumentError('file binary data cannot be null'));\n    if (!token) next(new InvalidArgumentError('No security token was passed'));\n    verifyTokenAndSave(res, next, fileData, token);\n  });\n});\n\n\nmodule.exports = router;\n"]}