{"version":3,"sources":["../../server/stream/notification-listener.js"],"names":["ACTIONS","follow","like","comment","getBodyAndTitle","data","item","verb","actor","action","title","body","subscribeNotificationListener","username","notificationToken","console","log","notifData","new","then","catch","error","e","exports","startListeningToNotifications","result","Object","keys","forEach"],"mappings":";;AAAA;;AAGA;;AAGA;;AAKA,IAAMA,UAAU;AACdC,UAAQ,eADM;AAEdC,QAAM,mBAFQ;AAGdC,WAAS;AAHK,CAAhB;;AAOA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAMC,OAAOD,KAAK,CAAL,CAAb;AADgC,MAExBE,IAFwB,GAERD,IAFQ,CAExBC,IAFwB;AAAA,MAElBC,KAFkB,GAERF,IAFQ,CAElBE,KAFkB;;AAGhC,MAAI,CAACD,IAAD,IAAS,CAACC,KAAd,EAAqB,OAAO,IAAP;AACrB,MAAMC,SAAST,QAAQO,IAAR,CAAf;;AAEA,MAAMG,QAAQ,YAAd;AACA,MAAMC,OAAUH,KAAV,SAAmBC,MAAzB;;AAEA,SAAO;AACLC,gBADK;AAELC;AAFK,GAAP;AAID,CAbD;;AAgBA,IAAMC,gCAAgC,SAAhCA,6BAAgC,CAACC,QAAD,EAAWC,iBAAX,EAAiC;AACrE,sCAAwBD,QAAxB,EAAkC,UAACR,IAAD,EAAU;AAC1CU,YAAQC,GAAR,CAAY,EAAEX,UAAF,EAAZ;AACA,QAAMY,YAAYb,gBAAgBC,KAAKa,GAArB,CAAlB;;AAEA,+BAAiBJ,iBAAjB,EAAoCG,SAApC;AACD,GALD,EAMGE,IANH,CAMQ;AAAA,WAAMJ,QAAQC,GAAR,mBAA4BH,QAA5B,aAAN;AAAA,GANR,EAOGO,KAPH,CAOS;AAAA,WAAKL,QAAQC,GAAR,CAAY,EAAEK,OAAOC,CAAT,EAAZ,CAAL;AAAA,GAPT;AAQD,CATD;;AAWAC,QAAQX,6BAAR,GAAwCA,6BAAxC;;AAGAW,QAAQC,6BAAR,GAAwC,YAAM;AAC5C,SAAO,6CAAgCL,IAAhC,CAAqC,UAACM,MAAD,EAAY;AACtDC,WAAOC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAACf,QAAD,EAAc;AAAA,UAChCC,iBADgC,GACVW,OAAOZ,QAAP,CADU,CAChCC,iBADgC;;AAExC,UAAI,CAACD,QAAD,IAAa,CAACC,iBAAlB,EAAqC;AACrCF,oCAA8BC,QAA9B,EAAwCC,iBAAxC;AACD,KAJD;AAKD,GANM,CAAP;AAOD,CARD","file":"notification-listener.js","sourcesContent":["import {\n  getUsersWithNotificationToken,\n} from '../firebase/search';\nimport {\n  subscribeToNotification,\n} from './index';\nimport {\n  sendNotification,\n} from '../firebase/fcm';\n\n\nconst ACTIONS = {\n  follow: 'followed you!',\n  like: 'liked your story!',\n  comment: 'commented on your story!',\n};\n\n\nconst getBodyAndTitle = (data) => {\n  const item = data[0];\n  const { verb, actor } = item;\n  if (!verb || !actor) return null;\n  const action = ACTIONS[verb];\n\n  const title = 'New update';\n  const body = `${actor} ${action}`;\n\n  return {\n    title,\n    body,\n  };\n};\n\n\nconst subscribeNotificationListener = (username, notificationToken) => {\n  subscribeToNotification(username, (data) => {\n    console.log({ data });\n    const notifData = getBodyAndTitle(data.new);\n\n    sendNotification(notificationToken, notifData);\n  })\n    .then(() => console.log(`listening to ${username} notifs`))\n    .catch(e => console.log({ error: e }));\n};\n\nexports.subscribeNotificationListener = subscribeNotificationListener;\n\n\nexports.startListeningToNotifications = () => {\n  return getUsersWithNotificationToken().then((result) => {\n    Object.keys(result).forEach((username) => {\n      const { notificationToken } = result[username];\n      if (!username || !notificationToken) return;\n      subscribeNotificationListener(username, notificationToken);\n    });\n  });\n};\n"]}