{"version":3,"sources":["../../server/stream/index.js"],"names":["process","env","STREAM_KEY","STREAM_SECRET","client","stream","connect","location","addPostActivity","username","postId","postTitle","timestamp","postPreface","userFeed","feed","addActivity","actor","verb","object","foreign_id","removePostActivity","removeActivity","foreignId","followUser","following","timelineFeed","follow","unfollowUser","timelinefeed","unfollow","addNotification","notificationFeed","Date","getTime","addFollowerNotification","followerUsername","getUserClient","userToken","createUserToken","addReaction","authorUsername","type","postActivityId","notifyMaker","userClient","reactions","add","then","reactionResult","removeFavoriteNotification","reactionId","delete","secondResult","console","log","addFavoriteNotification","addCommentNotification","getTimelineFeed","timeLineFeed","get","limit","enrich","counts","result","removePostNotifications","author","getNotificationFeed","mark_seen","subscribeToNotification","callback","subscribe","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["import stream from 'getstream';\n\nconst { STREAM_KEY, STREAM_SECRET } = process.env;\nconst client = stream.connect(STREAM_KEY, STREAM_SECRET, '46620', { location: 'us-east' });\n\n\nconst addPostActivity = (username, postId, postTitle, timestamp, postPreface) => {\n  const userFeed = client.feed('user', username);\n  return userFeed.addActivity({\n    actor: username,\n    verb: 'post',\n    object: postId,\n    foreign_id: `post:${postId}`,\n    postTitle,\n    postPreface,\n    timestamp,\n  });\n};\n\n\nconst removePostActivity = (username, postId) => {\n  const userFeed = client.feed('user', username);\n  return userFeed.removeActivity({ foreignId: `post:${postId}` });\n};\n\n\nconst followUser = (username, following) => {\n  const timelineFeed = client.feed('timeline', username);\n  timelineFeed.follow('user', following);\n};\n\n\nconst unfollowUser = (username, following) => {\n  const timelinefeed = client.feed('timeline', username);\n  timelinefeed.unfollow('user', following);\n};\n\nconst addNotification = (username, actor, verb, foreignId, object) => {\n  const notificationFeed = client.feed('notifications', username);\n  return notificationFeed.addActivity({\n    actor,\n    verb,\n    object,\n    foreign_id: foreignId,\n    timestamp: new Date().getTime(),\n  });\n};\n\n\nconst addFollowerNotification = (username, followerUsername) => {\n  const foreignId = `${followerUsername}-follow-${username}`;\n  return addNotification(username, followerUsername, 'follow', foreignId, foreignId);\n};\n\n\nconst getUserClient = (username) => {\n  const userToken = client.createUserToken(username);\n  return stream.connect(STREAM_KEY, userToken, '46620');\n};\n\n\nconst addReaction = (username, authorUsername, type, postId,\n  postActivityId, notifyMaker = false) => {\n  const userClient = getUserClient(username);\n\n  return userClient.reactions.add(type, postActivityId, {\n    actor: username,\n    timestamp: new Date().getTime(),\n  })\n    .then((reactionResult) => {\n      if (notifyMaker) {\n        addNotification(authorUsername, username, type, postId, postId);\n      }\n      return reactionResult;\n    });\n};\n\n\nconst removeFavoriteNotification = (username, reactionId) => {\n  return client.reactions.delete(reactionId, (secondResult) => {\n    console.log(secondResult);\n  });\n};\n\nconst addFavoriteNotification = (username, authorUsername, postId, postActivityId, notifyMaker) => {\n  return addReaction(username, authorUsername, 'like', postId, postActivityId, notifyMaker);\n};\n\n\nconst addCommentNotification = (username, authorUsername, postId, postActivityId, notifyMaker) => {\n  return addReaction(username, authorUsername, 'comment', postId, postActivityId, notifyMaker);\n};\n\n\nconst getTimelineFeed = (username) => {\n  const timeLineFeed = client.feed('timeline', username);\n  return timeLineFeed.get({\n    limit: 25,\n    enrich: true,\n    reactions: {\n      counts: true,\n    },\n  }).then((result) => {\n    return result;\n  });\n};\n\n\nconst removePostNotifications = (author, postId) => {\n  const notificationFeed = client.feed('notifications', author);\n  return notificationFeed.removeActivity({ foreignId: postId });\n};\n\n\nconst getNotificationFeed = (username) => {\n  const notificationFeed = client.feed('notifications', username);\n  return notificationFeed.get({ limit: 200, mark_seen: true }).then((result) => {\n    return result;\n  });\n};\n\n\nconst subscribeToNotification = (username, callback) => {\n  const notificationFeed = client.feed('notifications', username);\n\n  return notificationFeed.subscribe(callback);\n};\n\n\nmodule.exports = {\n  addPostActivity,\n  removePostActivity,\n  addFollowerNotification,\n  addFavoriteNotification,\n  addCommentNotification,\n  followUser,\n  unfollowUser,\n  getTimelineFeed,\n  getNotificationFeed,\n  removeFavoriteNotification,\n  removePostNotifications,\n  subscribeToNotification,\n};\n"]}