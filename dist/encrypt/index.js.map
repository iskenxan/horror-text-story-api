{"version":3,"sources":["../../server/encrypt/index.js"],"names":["TOKEN_SALT","generateHashedPassword","password","salt","bcrypt","genSaltSync","hashSync","generateToken","username","jwt","sign","verifyToken","token","Promise","resolve","reject","decoded","verify","e","AuthenticationError","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,aAAa,2CAAnB;;AAEA,IAAMC,yBAAyB,SAAzBA,sBAAyB,CAACC,QAAD,EAAc;AAC3C,MAAMC,OAAOC,mBAAOC,WAAP,CAAmB,EAAnB,CAAb;AACA,SAAOD,mBAAOE,QAAP,CAAgBJ,QAAhB,EAA0BC,IAA1B,CAAP;AACD,CAHD;;AAMA,IAAMI,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAClC,SAAOC,uBAAIC,IAAJ,CAAS;AACdF;AADc,GAAT,EAEJR,UAFI,CAAP;AAGD,CAJD;;AAOA,IAAMW,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI;AACF,UAAMC,UAAUP,uBAAIQ,MAAJ,CAAWL,KAAX,EAAkBZ,UAAlB,CAAhB;AACAc,cAAQE,QAAQR,QAAhB;AACD,KAHD,CAGE,OAAOU,CAAP,EAAU;AACVH,aAAO,IAAII,2BAAJ,CAAwB,wBAAxB,CAAP;AACD;AACF,GAPM,CAAP;AAQD,CATD;;AAYAC,OAAOC,OAAP,GAAiB,EAAEpB,8CAAF,EAA0BM,4BAA1B,EAAyCI,wBAAzC,EAAjB","file":"index.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\nimport { AuthenticationError } from '../utils/errors';\n\nconst TOKEN_SALT = 'Gn@L=Uys>_v(z}Nu\"~~kVUCg^B\\\\T<A[eGhTp&v8@';\n\nconst generateHashedPassword = (password) => {\n  const salt = bcrypt.genSaltSync(10);\n  return bcrypt.hashSync(password, salt);\n};\n\n\nconst generateToken = (username) => {\n  return jwt.sign({\n    username,\n  }, TOKEN_SALT);\n};\n\n\nconst verifyToken = (token) => {\n  return new Promise((resolve, reject) => {\n    try {\n      const decoded = jwt.verify(token, TOKEN_SALT);\n      resolve(decoded.username);\n    } catch (e) {\n      reject(new AuthenticationError('Invalid security token'));\n    }\n  });\n};\n\n\nmodule.exports = { generateHashedPassword, generateToken, verifyToken };\n"]}